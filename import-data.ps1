# Script para importar dados no Supabase local
Write-Host "üöÄ Importando dados para o Supabase local..." -ForegroundColor Cyan

# Verifica se o arquivo de dados existe
if (-not (Test-Path "supabase\data.sql")) {
    Write-Host "‚ùå Arquivo supabase\data.sql n√£o encontrado!" -ForegroundColor Red
    exit 1
}

# Par√¢metros de conex√£o do Postgres local (Supabase CLI)
$host = "127.0.0.1"
$port = "54322"
$database = "postgres"
$username = "postgres"
$password = "postgres"

# Vari√°vel de ambiente para senha (evita prompt)
$env:PGPASSWORD = $password

Write-Host "üìä Executando importa√ß√£o dos dados..." -ForegroundColor Yellow

# Tenta usar psql se dispon√≠vel, sen√£o usa docker
try {
    # Tenta psql primeiro
    psql -h $host -p $port -U $username -d $database -f "supabase\data.sql"
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Dados importados com sucesso!" -ForegroundColor Green
        exit 0
    }
} catch {
    Write-Host "‚ö†Ô∏è psql n√£o encontrado, tentando via Docker..." -ForegroundColor Yellow
}

# Se psql n√£o funcionar, usa Docker
try {
    $containerName = "supabase_db_github-mktplace-v1"
    docker exec -i $containerName psql -U postgres -d postgres -c "\i /var/lib/postgresql/data.sql"
    Write-Host "‚úÖ Dados importados via Docker!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao importar dados. Verifique se o Supabase local est√° rodando." -ForegroundColor Red
    Write-Host "üí° Execute: npx supabase status" -ForegroundColor Cyan
}

# Remove a vari√°vel de ambiente
Remove-Item Env:PGPASSWORD
