/**
 * Teste manual para validar notifica√ß√µes de mensagem de chat
 * Execute este arquivo para testar o sistema de notifica√ß√µes por email
 */

import { OrderNotificationService } from '../OrderNotificationService';

async function testMessageNotification() {
  console.log('üß™ Iniciando teste de notifica√ß√£o de mensagem...');

  try {
    // Teste 1: Notifica√ß√£o quando cliente envia mensagem
    console.log('\nüì§ Teste 1: Cliente enviando mensagem');
    const clientResult = await OrderNotificationService.sendMessageNotification(
      'test-order-id',
      'test-order-item-id',
      {
        message: 'Ol√°, preciso de ajuda com meu pedido. Quando ser√° entregue?',
        senderName: 'Jo√£o Silva',
        senderType: 'user'
      }
    );
    console.log('Resultado cliente ‚Üí admin:', clientResult ? '‚úÖ SUCESSO' : '‚ùå FALHA');

    // Teste 2: Notifica√ß√£o quando admin envia mensagem
    console.log('\nüì• Teste 2: Admin enviando mensagem');
    const adminResult = await OrderNotificationService.sendMessageNotification(
      'test-order-id',
      'test-order-item-id',
      {
        message: 'Ol√° Jo√£o! Seu pedido est√° sendo processado e deve ficar pronto em 2-3 dias √∫teis. Qualquer d√∫vida, estarei aqui!',
        senderName: 'Maria (Suporte)',
        senderType: 'admin'
      }
    );
    console.log('Resultado admin ‚Üí cliente:', adminResult ? '‚úÖ SUCESSO' : '‚ùå FALHA');

    console.log('\nüéâ Teste conclu√≠do!');
    console.log('Verifique:');
    console.log('1. Logs no console para debug');
    console.log('2. Dashboard do Supabase > Functions');
    console.log('3. Dashboard do Resend para delivery');

  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error);
  }
}

// Executar apenas se chamado diretamente
if (require.main === module) {
  testMessageNotification();
}

export { testMessageNotification };
